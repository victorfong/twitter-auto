// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/victorfong/twitter-auto/social (interfaces: Twitter)

package mock

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Twitter interface
type MockTwitter struct {
	ctrl     *gomock.Controller
	recorder *_MockTwitterRecorder
}

// Recorder for MockTwitter (not exported)
type _MockTwitterRecorder struct {
	mock *MockTwitter
}

func NewMockTwitter(ctrl *gomock.Controller) *MockTwitter {
	mock := &MockTwitter{ctrl: ctrl}
	mock.recorder = &_MockTwitterRecorder{mock}
	return mock
}

func (_m *MockTwitter) EXPECT() *_MockTwitterRecorder {
	return _m.recorder
}

func (_m *MockTwitter) GetSelfFriendIds() ([]int64, error) {
	ret := _m.ctrl.Call(_m, "GetSelfFriendIds")
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTwitterRecorder) GetSelfFriendIds() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSelfFriendIds")
}

func (_m *MockTwitter) GetFriendIds(userId int64) ([]int64, error) {
	ret := _m.ctrl.Call(_m, "GetFriendIds", userId)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTwitterRecorder) GetFriendIds(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetFriendIds", arg0)
}

func (_m *MockTwitter) GetSelfFollowerIds() ([]int64, error) {
	ret := _m.ctrl.Call(_m, "GetSelfFollowerIds")
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTwitterRecorder) GetSelfFollowerIds() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSelfFollowerIds")
}

func (_m *MockTwitter) GetFollowerIds(userId int64) ([]int64, error) {
	ret := _m.ctrl.Call(_m, "GetFollowerIds", userId)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockTwitterRecorder) GetFollowerIds(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetFollowerIds", arg0)
}

func (_m *MockTwitter) Unfollow(userId int64) error {
	ret := _m.ctrl.Call(_m, "Unfollow", userId)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTwitterRecorder) Unfollow(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Unfollow", arg0)
}

func (_m *MockTwitter) Follow(userId int64) error {
	ret := _m.ctrl.Call(_m, "Follow", userId)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockTwitterRecorder) Follow(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Follow", arg0)
}
